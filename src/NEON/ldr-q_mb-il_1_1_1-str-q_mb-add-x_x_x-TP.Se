#define INSTR ldr
#define NINST 8
#define N x0

.globl ninst
.data
ninst:
.long NINST
.text
.globl latency
.type latency, @function
.align 2
latency:

        # push callee-save registers onto stack
        sub            sp, sp, #64
        st1            {v8.2d, v9.2d, v10.2d, v11.2d}, [sp]
        sub            sp, sp, #64
        st1            {v12.2d, v13.2d, v14.2d, v15.2d}, [sp]
        stp x29, x30, [sp, -96]!
        stp x19, x20, [sp, 16]
        stp x21, x22, [sp, 32]
        stp x24, x25, [sp, 48]
        stp x26, x27, [sp, 64]
        str x28, [sp, 80]


        mov     x4, N
        mov     x24, sp
	sub	x24, x24, #192

        fmov    v0.2d, #1.00000000
        fmov    v1.2d, #1.00000000
        fmov    v2.2d, #1.00000000

loop:
        subs      x4, x4, #1
        INSTR    q1,  [sp] 
        str      q2,  [x24]	 
        add      x0, x0, x0
        INSTR    q3,  [sp] 
        str      q5,  [x24]	 
        add      x1, x1, x1
        INSTR    q6,  [sp] 
        str      q7,  [x24]	 
        add      x2, x2, x2
        INSTR    q8,  [sp] 
        str      q9,  [x24]
        add      x3, x3, x3
        INSTR    q10,  [sp]  
        str      q11,  [x24]
        add      x5, x5, x5
        INSTR    q12,  [sp]  
        str      q13,  [x24]
        add      x6, x6, x6
        INSTR    q14, [sp]  
        str      q15,  [x24]
        add      x7, x7, x7
        INSTR    q16, [sp]  
        str      q17,  [x24]
        add      x8, x8, x8
        bne       loop
done:

        # pop callee-save registers from stack
        ld1            {v12.2d, v13.2d, v14.2d, v15.2d}, [sp]
        add            sp, sp, #64
        ld1            {v8.2d, v9.2d, v10.2d, v11.2d}, [sp]
        add            sp, sp, #64
        
        ret

.size latency, .-latency
